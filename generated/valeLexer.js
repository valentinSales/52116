// Generated from c:/Users/valen/ssl-antlr-calculator/vale.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,24,137,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,0,1,0,1,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
1,4,1,4,1,4,1,4,5,4,79,8,4,10,4,12,4,82,9,4,1,5,4,5,85,8,5,11,5,12,5,86,
1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,
12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,4,25,132,8,25,
11,25,12,25,133,1,25,1,25,0,0,26,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,0,49,0,51,24,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,
13,32,32,139,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
0,0,0,45,1,0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,56,1,0,0,0,5,62,1,0,0,0,7,70,
1,0,0,0,9,74,1,0,0,0,11,84,1,0,0,0,13,88,1,0,0,0,15,90,1,0,0,0,17,92,1,0,
0,0,19,95,1,0,0,0,21,98,1,0,0,0,23,101,1,0,0,0,25,104,1,0,0,0,27,106,1,0,
0,0,29,108,1,0,0,0,31,110,1,0,0,0,33,112,1,0,0,0,35,114,1,0,0,0,37,116,1,
0,0,0,39,118,1,0,0,0,41,120,1,0,0,0,43,122,1,0,0,0,45,124,1,0,0,0,47,126,
1,0,0,0,49,128,1,0,0,0,51,131,1,0,0,0,53,54,5,100,0,0,54,55,5,111,0,0,55,
2,1,0,0,0,56,57,5,119,0,0,57,58,5,104,0,0,58,59,5,105,0,0,59,60,5,108,0,
0,60,61,5,101,0,0,61,4,1,0,0,0,62,63,5,99,0,0,63,64,5,111,0,0,64,65,5,110,
0,0,65,66,5,115,0,0,66,67,5,111,0,0,67,68,5,108,0,0,68,69,5,101,0,0,69,6,
1,0,0,0,70,71,5,108,0,0,71,72,5,111,0,0,72,73,5,103,0,0,73,8,1,0,0,0,74,
80,3,47,23,0,75,79,3,47,23,0,76,79,3,49,24,0,77,79,5,95,0,0,78,75,1,0,0,
0,78,76,1,0,0,0,78,77,1,0,0,0,79,82,1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,
81,10,1,0,0,0,82,80,1,0,0,0,83,85,3,49,24,0,84,83,1,0,0,0,85,86,1,0,0,0,
86,84,1,0,0,0,86,87,1,0,0,0,87,12,1,0,0,0,88,89,5,62,0,0,89,14,1,0,0,0,90,
91,5,60,0,0,91,16,1,0,0,0,92,93,5,62,0,0,93,94,5,61,0,0,94,18,1,0,0,0,95,
96,5,60,0,0,96,97,5,61,0,0,97,20,1,0,0,0,98,99,5,61,0,0,99,100,5,61,0,0,
100,22,1,0,0,0,101,102,5,33,0,0,102,103,5,61,0,0,103,24,1,0,0,0,104,105,
5,61,0,0,105,26,1,0,0,0,106,107,5,43,0,0,107,28,1,0,0,0,108,109,5,45,0,0,
109,30,1,0,0,0,110,111,5,42,0,0,111,32,1,0,0,0,112,113,5,47,0,0,113,34,1,
0,0,0,114,115,5,46,0,0,115,36,1,0,0,0,116,117,5,40,0,0,117,38,1,0,0,0,118,
119,5,41,0,0,119,40,1,0,0,0,120,121,5,123,0,0,121,42,1,0,0,0,122,123,5,125,
0,0,123,44,1,0,0,0,124,125,5,59,0,0,125,46,1,0,0,0,126,127,7,0,0,0,127,48,
1,0,0,0,128,129,7,1,0,0,129,50,1,0,0,0,130,132,7,2,0,0,131,130,1,0,0,0,132,
133,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,135,1,0,0,0,135,136,6,25,
0,0,136,52,1,0,0,0,5,0,78,80,86,133,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class valeLexer extends antlr4.Lexer {

    static grammarFileName = "vale.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'do'", "'while'", "'console'", "'log'", 
                         null, null, "'>'", "'<'", "'>='", "'<='", "'=='", 
                         "'!='", "'='", "'+'", "'-'", "'*'", "'/'", "'.'", 
                         "'('", "')'", "'{'", "'}'", "';'" ];
	static symbolicNames = [ null, "DO", "WHILE", "CONSOLE", "LOG", "Identifier", 
                          "Number", "GT", "LT", "GTE", "LTE", "EQ", "NEQ", 
                          "ASSIGN", "PLUS", "MINUS", "MULT", "DIV", "DOT", 
                          "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", 
                          "WS" ];
	static ruleNames = [ "DO", "WHILE", "CONSOLE", "LOG", "Identifier", "Number", 
                      "GT", "LT", "GTE", "LTE", "EQ", "NEQ", "ASSIGN", "PLUS", 
                      "MINUS", "MULT", "DIV", "DOT", "LPAREN", "RPAREN", 
                      "LBRACE", "RBRACE", "SEMI", "Letter", "Digit", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

valeLexer.EOF = antlr4.Token.EOF;
valeLexer.DO = 1;
valeLexer.WHILE = 2;
valeLexer.CONSOLE = 3;
valeLexer.LOG = 4;
valeLexer.Identifier = 5;
valeLexer.Number = 6;
valeLexer.GT = 7;
valeLexer.LT = 8;
valeLexer.GTE = 9;
valeLexer.LTE = 10;
valeLexer.EQ = 11;
valeLexer.NEQ = 12;
valeLexer.ASSIGN = 13;
valeLexer.PLUS = 14;
valeLexer.MINUS = 15;
valeLexer.MULT = 16;
valeLexer.DIV = 17;
valeLexer.DOT = 18;
valeLexer.LPAREN = 19;
valeLexer.RPAREN = 20;
valeLexer.LBRACE = 21;
valeLexer.RBRACE = 22;
valeLexer.SEMI = 23;
valeLexer.WS = 24;



